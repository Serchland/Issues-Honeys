<UserControl x:Class="IssuesHoneys.Modules.Issues.Views.LabelsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconpacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:coreNameDef="clr-namespace:IssuesHoneys.Core.NameDefinition;assembly=IssuesHoneys.Core"
             xmlns:coreViews="clr-namespace:IssuesHoneys.Core.Views;assembly=IssuesHoneys.Core"
             xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <UserControl.Resources>
        <ResourceDictionary Source="/IssuesHoneys.Modules.Issues;component/Views/Templates/LabelSelectedItemTemplates.xaml"></ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="15" x:Name="GridLabels">
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="5,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>


            <Button Grid.Column="0" Grid.Row="0" Height="32" VerticalAlignment="Top"
                    Content="{StaticResource ButtonLabelCaption}"
                    MinWidth="145"
                    Command="{Binding NavigateCommand}"
                    CommandParameter="{x:Static coreNameDef:CommandParameters.Labels}"
                    Loaded="Button_Loaded"  
                    controls:ControlsHelper.FocusBorderBrush="Orange"
                    Style="{DynamicResource MyIconStyle}">
                <Button.Tag>
                    <iconpacks:PackIconFeatherIcons Width="18"
                                        Height="18"
                                        Kind="Tag">
                    </iconpacks:PackIconFeatherIcons>
                </Button.Tag>
            </Button>

            <Button Grid.Column="1" Grid.Row="0" Height="32" VerticalAlignment="Top"
                    Content="{StaticResource ButtonMillestoneCaption}"
                    MinWidth="145"
                    Command="{Binding NavigateCommand}"
                    CommandParameter="{x:Static coreNameDef:CommandParameters.Milestones}"
                    controls:ControlsHelper.FocusBorderBrush="Orange"
                    Style="{DynamicResource MyIconStyle}">
                <Button.Tag>
                    <iconpacks:PackIconUnicons Width="18"
                                   Height="18"
                                   Kind="SignRight">
                    </iconpacks:PackIconUnicons>
                </Button.Tag>
            </Button>

            <DockPanel Grid.Column="2"
                       Grid.Row="0"
                       Margin="5,0,0,0">

                <Label VerticalAlignment="Center"
                       Content="{StaticResource LabelSearchCaption}">
                </Label>

                <TextBox AcceptsReturn="False"
                         controls:TextBoxHelper.Watermark="{StaticResource WaterMarkSearchLabelsCaption}" 
                         controls:TextBoxHelper.ClearTextButton="True"
                         controls:TextBoxHelper.ButtonCommand ="{Binding FilterLabelsCommand}"
                         MaxWidth="300"
                         MinWidth="200"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Left"
                         Style ="{DynamicResource MahApps.Styles.TextBox.Search}"
                         Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding FilterLabelsCommand}" />
                        <KeyBinding Key="Return" Command="{Binding FilterLabelsCommand}" />
                    </TextBox.InputBindings>
                </TextBox>

            </DockPanel>

            <Button Grid.Column="3"
                    Grid.Row="0"
                    Margin="0,0,5,0"
                    BorderBrush="LightGray"
                    Background="LightGreen"
                    HorizontalAlignment="Right"
                    Command="{Binding NewLabelVisibilityCommand}"
                    CommandParameter="{x:Static coreNameDef:CommandParameters.NewLabel}"
                    MinWidth="100"
                    Content="{StaticResource ButtonNewLabelCaption}"
                    controls:ControlsHelper.FocusBorderBrush="Orange">
            </Button>

        </Grid>

        <Grid Grid.Column="0"
                            Grid.Row="1"
                            Grid.ColumnSpan="5"
                            Margin="15"
                            Visibility="{Binding NewLabelViewVisibilitity}"
                            x:Name="PART_NewLabel">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <StackPanel Grid.ColumnSpan="2"
                        Grid.Row="0"
                        Margin="15,0,0,0"
                        Orientation="Horizontal" >

                <Label  VerticalAlignment="Center"
                        Content="Lable preview:">
                </Label>

                <Border  BorderThickness="1"
                         BorderBrush="LightGray"
                         Background="{Binding NewLabel.Color}"
                         VerticalAlignment="Center"
                         Height="18"
                         MinWidth="50"
                         CornerRadius="10">

                    <TextBlock Text="{Binding NewLabel.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               TextAlignment="Center"
                               Foreground="White"
                               TextWrapping="WrapWithOverflow"
                               Padding="5,0,5,0"
                               FontSize="10" />
                </Border>

               
            </StackPanel>

            <coreViews:NewLabel  Grid.Row="1"></coreViews:NewLabel>
        </Grid>
       
        <Grid Grid.Column="0"
              Grid.Row="2" >
            <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Border Grid.Row="0"
                        BorderThickness="1"
                        BorderBrush="{StaticResource MainBorderBrush}"
                        Margin="5,5,5,0"
                        Background="WhiteSmoke" >

                    <Grid MinHeight="40">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                  
                        </Grid.RowDefinitions>

                    <StackPanel Grid.Column="0"
                               Grid.Row="0"
                               Margin="5,0,0,0"
                               Orientation="Horizontal"
                               VerticalAlignment="Center" >
                        <Label>
                            <iconpacks:PackIconFeatherIcons 
                                Kind="Tag">
                            </iconpacks:PackIconFeatherIcons>
                        </Label>
                        <Label Content="{Binding TotalLabels}"/>
                        <Label Content="Open" Padding="0,5,5,5"/>
                    </StackPanel>

                    <!--ItemsSource="{Binding Source={x:Static models:SampleData.Artists}}"-->
                    <mah:DropDownButton Grid.Column="1"
                                        Grid.Row="0"
                                        Margin="5,0,8,0"
                                        BorderBrush="Transparent"
                                        Background="Transparent"
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Right"
                                        ItemsSource="{Binding SortItems}"
                                        Content="Sort">
                        <mah:DropDownButton.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="{Binding StringValue}"></TextBlock>
                                </Grid>
                            </DataTemplate>
                            
                        </mah:DropDownButton.ItemTemplate>
                        
                        <mah:DropDownButton.ItemContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:DropDownButton}}, Path=DataContext.SelectedSortItemCommand}" />
                                <Setter Property="CommandParameter" Value="{Binding EnumValue}" />

                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding }" Value="True" />
                                            <Condition Binding="{Binding IsSelected}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="#3D26A0DA" />
                                    </MultiDataTrigger>
                                </Style.Triggers>

                            </Style>
                        </mah:DropDownButton.ItemContainerStyle>
                    </mah:DropDownButton>
                        
                    <!--<Label Grid.Column="1"
                               Grid.Row="0"
                               Margin="5,0,8,0"
                               VerticalAlignment="Center" 
                               HorizontalAlignment="Right"
                               Content="Sort"/>-->

                        

                    </Grid>
                </Border>

            <ListView Grid.ColumnSpan="2"
                          Grid.Row="1"
                          BorderThickness="1 0 1 1"
                          BorderBrush="{StaticResource MainBorderBrush}"
                          IsSynchronizedWithCurrentItem="True"
                          ItemsSource="{Binding Labels}"                         
                          SelectedItem="{Binding SelectedLabel}"
                          Margin="5,0,5,5"
                          x:Name="PART_LabelsListView">

                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="BorderThickness"
                                    Value="0,0,0,0.5" />
                        <Setter Property="BorderBrush"
                                    Value="LightGray"/>

                        <Setter Property="IsSelected"
                                    Value="{Binding IsSelected}"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="Stretch"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        
                                        <Trigger Property="IsEnabled"
                                                     Value="False">
                                            <Setter Property="TextElement.Foreground"
                                                        TargetName="Bd"
                                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="ContentTemplate" Value="{StaticResource SelectedItemTemplate}" />

                        <EventSetter Event="PreviewMouseDown" Handler="PART_LabelsListViewItem_MouseDown" />

                        <EventSetter Event="Selected" Handler="PART_LabelsListViewItem_Selected" />

                        <Style.Triggers>
                           
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEdditing}" Value="False" />
                                    <Condition Binding="{Binding IsSelected}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
                                                        Value="#3D26A0DA" />
                                <Setter Property="BorderBrush"
                                                        Value="#3D26A0DA" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEdditing}" Value="True" />
                                    <Condition Binding="{Binding IsSelected}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="#3D26A0DA" />
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding IsEdditing}" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource SelectedItemEditTemplate}" />
                            </DataTrigger>

                        </Style.Triggers>


                        
                    </Style>
                </ListView.ItemContainerStyle>

                
            </ListView>
      
     </Grid>

</Grid>
</UserControl>
